// Code generated by ogen, DO NOT EDIT.

package api

import (
	"io"
	"net/url"
)

// AuthFound is response for Auth operation.
type AuthFound struct {
	Location  OptURI
	SetCookie string
}

// GetLocation returns the value of Location.
func (s *AuthFound) GetLocation() OptURI {
	return s.Location
}

// GetSetCookie returns the value of SetCookie.
func (s *AuthFound) GetSetCookie() string {
	return s.SetCookie
}

// SetLocation sets the value of Location.
func (s *AuthFound) SetLocation(val OptURI) {
	s.Location = val
}

// SetSetCookie sets the value of SetCookie.
func (s *AuthFound) SetSetCookie(val string) {
	s.SetCookie = val
}

func (*AuthFound) authRes() {}

// Ref: #/components/schemas/CallbackResponseSchema
type CallbackResponseSchema struct {
	// Id_token.
	IDToken string `json:"id_token"`
	// Email.
	Email OptString `json:"email"`
	// Password.
	Password OptString `json:"password"`
}

// GetIDToken returns the value of IDToken.
func (s *CallbackResponseSchema) GetIDToken() string {
	return s.IDToken
}

// GetEmail returns the value of Email.
func (s *CallbackResponseSchema) GetEmail() OptString {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *CallbackResponseSchema) GetPassword() OptString {
	return s.Password
}

// SetIDToken sets the value of IDToken.
func (s *CallbackResponseSchema) SetIDToken(val string) {
	s.IDToken = val
}

// SetEmail sets the value of Email.
func (s *CallbackResponseSchema) SetEmail(val OptString) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *CallbackResponseSchema) SetPassword(val OptString) {
	s.Password = val
}

// CallbackResponseSchemaHeaders wraps CallbackResponseSchema with response headers.
type CallbackResponseSchemaHeaders struct {
	SetCookie string
	Response  CallbackResponseSchema
}

// GetSetCookie returns the value of SetCookie.
func (s *CallbackResponseSchemaHeaders) GetSetCookie() string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *CallbackResponseSchemaHeaders) GetResponse() CallbackResponseSchema {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *CallbackResponseSchemaHeaders) SetSetCookie(val string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *CallbackResponseSchemaHeaders) SetResponse(val CallbackResponseSchema) {
	s.Response = val
}

func (*CallbackResponseSchemaHeaders) callbackRes() {}

// Ref: #/components/schemas/ErrorResponse
type ErrorResponse struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *ErrorResponse) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *ErrorResponse) SetMessage(val string) {
	s.Message = val
}

func (*ErrorResponse) authRes() {}

// ErrorResponseHeaders wraps ErrorResponse with response headers.
type ErrorResponseHeaders struct {
	SetCookie string
	Response  ErrorResponse
}

// GetSetCookie returns the value of SetCookie.
func (s *ErrorResponseHeaders) GetSetCookie() string {
	return s.SetCookie
}

// GetResponse returns the value of Response.
func (s *ErrorResponseHeaders) GetResponse() ErrorResponse {
	return s.Response
}

// SetSetCookie sets the value of SetCookie.
func (s *ErrorResponseHeaders) SetSetCookie(val string) {
	s.SetCookie = val
}

// SetResponse sets the value of Response.
func (s *ErrorResponseHeaders) SetResponse(val ErrorResponse) {
	s.Response = val
}

func (*ErrorResponseHeaders) callbackRes() {}

type GetOK struct {
	Data io.Reader
}

// Read reads data from the Data reader.
//
// Kept to satisfy the io.Reader interface.
func (s GetOK) Read(p []byte) (n int, err error) {
	if s.Data == nil {
		return 0, io.EOF
	}
	return s.Data.Read(p)
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptURI returns new OptURI with value set to v.
func NewOptURI(v url.URL) OptURI {
	return OptURI{
		Value: v,
		Set:   true,
	}
}

// OptURI is optional url.URL.
type OptURI struct {
	Value url.URL
	Set   bool
}

// IsSet returns true if OptURI was set.
func (o OptURI) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptURI) Reset() {
	var v url.URL
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptURI) SetTo(v url.URL) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptURI) Get() (v url.URL, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptURI) Or(d url.URL) url.URL {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}
